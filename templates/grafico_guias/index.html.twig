{% extends '@EasyAdmin/page/content.html.twig' %}

{% block title %}Grafico Guias{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('css/image-uploader.min.css') }}">
    <!-- Include other stylesheets as needed -->
{% endblock %}

{% block main %}
    <h1>Gráficos Guias</h1>
    <canvas id="myChart" width="400px" height="200px"></canvas>

    <script src="{{ asset('js/jquery-3.7.1.js') }}"></script>
    <script src="{{ asset('js/jquery-ui.js') }}"></script>
    <!-- Include other scripts as needed -->

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script> <!-- Include Chart.js library -->

    <script>
        function getRandomColor() {
            var r = Math.floor(Math.random() * 256);
            var g = Math.floor(Math.random() * 256);
            var b = Math.floor(Math.random() * 256);

            var color = "#" + r.toString(16) + g.toString(16) + b.toString(16);

            return color;
        }

        // Datos iniciales para el gráfico
        $.ajax({
            url: '/valoracionGUIAS',
            type: 'POST',
            data: "",
            processData: false,
            contentType: false,
            success: function (datos) {
                datos = JSON.parse(datos);
                let datasets = [];
                for (let i = 0; i < datos.length; i++) {
                    let guiaLabel = datos[i][0].email;
                    let arrayValoracion = [];

                    if (datos[i].length > 1) {
                        for (let j = 0; j < datos[i].length; j++) {
                            arrayValoracion.push(datos[i][j][0].notaGuia);
                        }
                    } else {
                        arrayValoracion.push(datos[i][0][0].notaGuia);
                    }

                    datasets.push({
                        label: guiaLabel,
                        data: arrayValoracion,
                        borderColor: getRandomColor(), // Generate random color for each dataset
                        fill: false
                    });
                }

                // Define data object
                let data = {
                    labels: ['0', '1', '2', '3', '4', '5'],
                    datasets: datasets
                };

                // Configuración del gráfico
                const options = {
                    scales: {
                        x: {
                            beginAtZero: true
                        },
                        y: {
                            beginAtZero: true
                        }
                    }
                };

                // Crear el gráfico de líneas
                const ctx = document.getElementById('myChart').getContext('2d');
                const myChart = new Chart(ctx, {
                    type: 'line',
                    data: data,
                    options: options
                });
            },
            error: function (error) {
                console.log('Error al obtener los datos de la API:', error);
            }
        });
    </script>
{% endblock %}